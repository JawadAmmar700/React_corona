{"version":3,"sources":["axios.js","components/Chart.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","Chart","useRef","useState","countries","setCountries","custom","setCustom","selected","setSelected","list","setList","date","cases","casesforday","useEffect","fetch","then","res","json","data","get","country","timeline","Object","entries","map","item","push","i","length","setingUpData","labels","splice","datasets","label","backgroundColor","borderColor","borderWidth","hoverBorderColor","id","className","onChange","e","preventDefault","target","value","sort","a","b","recovered","deaths","width","height","options","maintainAspectRatio","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f2b4bbd.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:5000/',\r\n})\r\n\r\nexport default instance;","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport './chart.css'\r\n\r\n\r\n\r\nconst url = 'https://disease.sh/v3/covid-19/countries';\r\nconst urlAll = 'https://disease.sh/v3/covid-19/all';\r\n\r\n\r\nfunction Chart() {\r\n    const name = useRef('');\r\n    const [countries, setCountries] = useState([]);\r\n    const [custom, setCustom] = useState({});\r\n    const [selected, setSelected] = useState('WorldWide');\r\n    const [list, setList] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n    const date = [];\r\n    const cases = [];\r\n    const casesforday = [];\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setCountries(data);\r\n            })\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        setCustom({})\r\n        if (selected === 'WorldWide') {\r\n            fetch(urlAll)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setCustom(data);\r\n\r\n                })\r\n            axios.get(`https://disease.sh/v3/covid-19/historical/all?lastdays=8`)\r\n                .then(country => {\r\n\r\n                    setList(country.data?.cases);\r\n\r\n                })\r\n\r\n        }\r\n        else {\r\n            fetch(`https://disease.sh/v3/covid-19/countries/${selected}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setCustom(data);\r\n\r\n                })\r\n        }\r\n\r\n    }, [selected])\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (selected != \"WorldWide\") {\r\n\r\n            axios.get(`https://disease.sh/v3/covid-19/historical/${selected}?lastdays=8`)\r\n                .then(country => {\r\n\r\n                    setList(country.data.timeline?.cases);\r\n\r\n                })\r\n        }\r\n\r\n    }, [selected])\r\n\r\n    const setingUpData = () => {\r\n        Object.entries(list).map(item => {\r\n            cases.push(item[1])\r\n            date.push(item[0])\r\n\r\n        })\r\n\r\n        for (let i = 0; i < cases.length - 1; i++) {\r\n            casesforday.push((cases[i] - cases[i + 1]) * -1)\r\n        }\r\n        // Object.entries(last8daysDeath).map(item => {\r\n        //     deaths.push(item[1])\r\n\r\n        // })\r\n\r\n    }\r\n    setingUpData()\r\n\r\n    const data = {\r\n        labels: date.splice(1, 7),\r\n        datasets: [\r\n            {\r\n                label: 'Cases per day',\r\n                backgroundColor: 'rgba(255,99,132,0.2)',\r\n                borderColor: 'rgba(255,99,132,1)',\r\n                borderWidth: 3,\r\n                hoverBorderColor: 'rgba(255,99,132,1)',\r\n                data: casesforday\r\n            }\r\n        ]\r\n    }\r\n    let id = 1;\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        setOpen(!open);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"leftside\">\r\n\r\n                <div className=\"selector\">\r\n\r\n\r\n                    <select className=\"displayValue\" onChange={e => {\r\n                        e.preventDefault()\r\n                        setSelected(e.target.value)\r\n                    }}>\r\n                        <option value=\"WorldWide\">WorldWide</option>\r\n                        {\r\n                            countries.sort((a, b) => a.country > b.country ? 1 : -1).map(item => {\r\n                                return (\r\n\r\n                                    <option key={id++} value={item.country}>{item.country}</option>\r\n\r\n\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </select>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"cases\">\r\n                        <h3>Cases</h3>\r\n                        <p>{custom.cases}</p>\r\n                    </div>\r\n                    <div className=\"recoverd\">\r\n                        <h3>Recoverd</h3>\r\n                        <p>{custom.recovered}</p>\r\n                    </div>\r\n                    <div className=\"deaths\">\r\n                        <h3>Deaths</h3>\r\n                        <p>{custom.deaths}</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"graph\">\r\n                    <Line\r\n                        data={data}\r\n                        width={100}\r\n                        height={200}\r\n                        options={{\r\n                            maintainAspectRatio: false\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"rightside\">\r\n                <div className=\"tableWrap\">\r\n                    <h4>country Cases</h4>\r\n                    <div className=\"table\">\r\n\r\n                        <table>\r\n\r\n                            {\r\n                                countries.sort((a, b) => a.cases < b.cases ? 1 : -1).map(item => {\r\n                                    return (\r\n\r\n                                        <tr key={id++}>\r\n                                            <td>{item.country}</td>\r\n                                            <td className=\"tablecases\">{item.cases}</td>\r\n                                        </tr>\r\n\r\n                                    )\r\n\r\n                                })\r\n                            }\r\n\r\n                        </table>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Chart;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from './axios';\nimport Chart from './components/Chart';\n\n\nfunction App() {\n\n\n  // const [add, setAdd] = useState(0);\n\n  // const handle = e => {\n  //   e.preventDefault();\n  //   setAdd(add + 1);\n\n  // }\n\n  // useEffect(() => {\n\n  //   const send = async () => {\n  //     await axios({\n  //       method: 'POST',\n  //       url: `/add/?id=${add}`\n  //     })\n\n  //   }\n  //   send()\n  //   // fetch('http://localhost:5000/add')\n  //   //   .then(response => response.json())\n  //   //   .then(res => console.log(res))\n  // }, [add])\n\n  return (\n    <div className=\"App\">\n      {/* <button onClick={handle}>Add</button> */}\n      <Chart />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}